<!--
 * $RCSfile: build.xml,v $    $Revision: 1.7 $  $Date: 2005/06/08 14:56:21 $ - $Author: mikemking $
 * 
 * Copyright (c) 2005 - Michael King, Kevin McAllister
 * 
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of the
 * License, or (at your option) any later version. See the file
 * LICENSE.txt included with this library for more information.
 * 
-->
<project name="Blogcaster" default="build" basedir=".">
  <description>Blogcaster build file</description>
  
  <!-- TODO: do version a better way -->
  <property name="version" value="0.5" />
  <property name="mainclass" value="com.webcodefocus.blogcaster.Blogcaster" />
  <property name="src" location="src" />
  <property name="build" location="build" />
  <property name="bin" location="bin" />
  <property name="GUITesting" location="../GUITesting" />
  <property name="view" location="${bin}/com/webcodefocus/blogcaster/view" />
  <property name="classes" location="${build}/classes" />
  <property name="dist" location="${build}/blogcaster" />
  <property name="dist.lib" location="${dist}/lib" />
  <property name="dist.native" location="${dist}/native" />
  <property name="lib.common" location="lib/common" />
  <property name="lib.win32" location="lib/win32" />
  <property name="lib.linux" location="lib/linux" />
  <property name="native.linux" location="${lib.linux}/native" />
  <property name="native.win32" location="${lib.win32}/native" />
  <property name="build.debug" value="true" />
  <property name="build.optimize" value="false" />
  <property name="build.deprecation" value="true" />
  <property name="build.debuglevel" value="lines,vars,source" />
  <property name="config" location="config" />
  <property name="docs" location="docs" />
  <property name="manifest" location="${config}/manifest.txt" />
  
  <path id="common.classpath">
    <fileset dir="${lib.common}">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="win32.classpath">
    <path refid="common.classpath" />
    <fileset dir="${lib.win32}">
      <include name="*.jar" />
    </fileset>
  	<fileset dir="${GUITesting}">
  	  <include name="**/*.class" />
    </fileset>
  </path>

  <path id="linux.classpath">
    <path refid="common.classpath" />
    <fileset dir="${lib.linux}">
      <include name="*.jar" />
    </fileset>
  </path>

  <target name="build" depends="init,determineOS,compile,libcopy,jar" />

  <target name="init">
    <tstamp />
    <mkdir dir="${build}" />
    <mkdir dir="${classes}" />
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist.lib}" />
    <mkdir dir="${dist.native}" />
  </target>

  <target name="linux" depends="init">
    <property name="LinuxOS" value="" />
    <antcall target="compile" />
    <antcall target="libcopy" />
    <antcall target="jar" />
  </target>

  <target name="win" depends="init">
    <property name="WindowsOS" value="" />
    <antcall target="compile" />
    <antcall target="libcopy" />
    <antcall target="jar" />
  </target>

  <target name="compile" depends="init,determineOS" description="compile the source">
    <antcall target="compile.linux" />
    <antcall target="compile.win32" />
  </target>

  <target name="compile.win32" depends="init" description="compile for windows" if="WindowsOS">
    <javac destdir="${classes}" debug="${build.debug}" debuglevel="${build.debuglevel}" optimize="${build.optimize}" deprecation="${build.deprecation}" srcdir="${src}">
      <classpath refid="win32.classpath" />
    </javac>
  	
  	<!-- Copy all files from the build folder to the bin folder -->
  	<copy todir="${bin}">
   		<fileset dir="${classes}">
  			<include name="**/*.*" />
  		</fileset>	
  	</copy>
  	
  </target>

  <target name="compile.linux" depends="init" description="compile for linux" if="LinuxOS">
    <javac destdir="${classes}" debug="${build.debug}" debuglevel="${build.debuglevel}" optimize="${build.optimize}" deprecation="${build.deprecation}" srcdir="${src}">
      <classpath refid="linux.classpath" />
    </javac>
  </target>

  <target name="libcopy">
    <!-- copy common jars and then call the os specific ones -->
    <copy todir="${dist.lib}">
      <fileset dir="${lib.common}">
        <include name="**/*.jar" />
      </fileset>
    </copy>
    <antcall target="libcopy.linux" />
    <antcall target="libcopy.win32" />
  </target>

  <target name="libcopy.win32" depends="init" if="WindowsOS">
    <copy todir="${dist.lib}">
      <fileset dir="${lib.win32}">
        <include name="*.jar" />
      </fileset>
    </copy>
    <copy todir="${dist.native}">
      <fileset dir="${native.win32}"/>
    </copy>
    <copy file="${config}/win32/blogcaster.cmd" todir="${dist}" />
  </target>

  <target name="libcopy.linux" depends="init" if="LinuxOS">
    <copy todir="${dist.lib}">
      <fileset dir="${lib.linux}">
        <include name="*.jar" />
      </fileset>
    </copy>
    <copy todir="${dist.native}">
      <fileset dir="${native.linux}"/>
    </copy>
    <copy file="${config}/linux/blogcaster.sh" todir="${dist}" />
    <!-- make it executable -->
    <chmod file="${dist}/blogcaster.sh" perm="ugo+rwx"/>
  </target>

  <target name="jar" depends="init,determineOS,compile,libcopy" description="create the jar file">
    <path id="jar.libs">
      <fileset dir="${dist}">
        <include name="lib/**"/>
      </fileset>
    </path>

    <!-- convert the libraries to be included in the 
      Class-Path attribute of the MANIFEST.MF file -->
    <pathconvert property="manifest.classpath" pathsep=" ">
      <path refid="jar.libs"/>
      <chainedmapper>
        <flattenmapper/>
        <globmapper from="*.jar" to="lib/*.jar" />
      </chainedmapper>
    </pathconvert>

    <jar jarfile="${dist}/Blogcaster.jar">
      <fileset dir="${classes}" />
      <manifest>
        <attribute name="Main-Class" value="${mainclass}"/>
        <attribute name="Class-Path" value="${manifest.classpath}"/>
      </manifest>
    </jar>
  </target>
  
  <target name="package" description="create the release file">
    <zip destfile="${build}/blogcaster-${os.name}-${version}.zip">
      <fileset dir="${build}">
        <include name="blogcaster/**"/>
      </fileset>
      <fileset dir="${docs}">
        <include name="README.txt"/>
        <include name="LICENSE.txt"/>
      </fileset>
    </zip>
  </target>

  <target name="clean" description="clean up">
    <delete dir="${build}" />
  	<delete> 
  		<fileset dir="${view}" includes="**/*.class"/>
  	</delete>
  </target>

  <target name="determineOS">
    <condition property="LinuxOS">
      <os name="Linux" />
    </condition>
    <condition property="WindowsOS">
      <os family="windows" />
    </condition>
  </target>
</project>